{"ast":null,"code":"var _jsxFileName = \"/workspace/spring-petclinic/client/src/components/DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL_USERS = gql`\n  query GetAllUsers {\n    users {\n      id\n      name\n      username\n    }\n  }\n`;\n\nfunction DisplayData() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ALL_USERS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Data is Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 23\n  }, this);\n\n  if (data) {\n    console.log(data);\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"List of Users\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data === null || data === void 0 ? void 0 : data.map(_ref => {\n        let {\n          name,\n          age,\n          username\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Name: \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Username: \", username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"age: \", age]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DisplayData, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/workspace/spring-petclinic/client/src/components/DisplayData.js"],"names":["React","useQuery","gql","GET_ALL_USERS","DisplayData","data","loading","error","console","log","map","name","age","username"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASE,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACE,aAAD,CAAzC;AACA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACb,MAAID,IAAJ,EAAU;AACRG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AACD,MAAIE,KAAJ,EAAW;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,sBACE;AAAA,6CAEE;AAAA,gBAAMF,IAAN,aAAMA,IAAN,uBAAMA,IAAI,CAAEK,GAAN,CAAU,QAAuB;AAAA,YAAtB;AAACC,UAAAA,IAAD;AAAMC,UAAAA,GAAN;AAAUC,UAAAA;AAAV,SAAsB;AACnC,4BACI;AAAA,kCACI;AAAA,iCAAWF,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,qCAAeE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,gCAAUD,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARK;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAvBQR,W;UAC0BH,Q;;;KAD1BG,W;AAyBT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst GET_ALL_USERS = gql`\n  query GetAllUsers {\n    users {\n      id\n      name\n      username\n    }\n  }\n`;\n\nfunction DisplayData() {\n  const { data, loading, error } = useQuery(GET_ALL_USERS);\n  if (loading) return <h1>Data is Loading</h1>;\n  if (data) {\n    console.log(data);\n  }\n  if (error) {\n    console.log(error);\n  }\n  return (\n    <div>\n      List of Users\n      <div>{data?.map(({name,age,username})=>{\n          return (\n              <div>\n                  <h1>Name: {name}</h1>\n                  <h1>Username: {username}</h1>\n                  <h1>age: {age}</h1>\n              </div>\n          )\n      })}</div>\n    </div>\n  );\n}\n\nexport default DisplayData;\n"]},"metadata":{},"sourceType":"module"}