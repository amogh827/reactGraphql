{"ast":null,"code":"var _jsxFileName = \"/workspace/spring-petclinic/client/src/components/SearchUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USER_BYID = gql`\n  query User($userId: ID!) {\n    user(id: $userId) {\n      name\n      nationality\n      username\n    }\n  }\n`;\n\nfunction SearchUsers() {\n  _s();\n\n  const [userId, setUserId] = useState(\"\");\n  const [findUser, {\n    data,\n    loading,\n    error\n  }] = useLazyQuery(GET_USER_BYID);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter User Id\",\n        onChange: event => {\n          setUserId(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          findUser({\n            variables: {\n              userId: userId\n            }\n          });\n        },\n        children: \"Fetch User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchUsers, \"/UHRVW486ja3kdm6iBwWx1A9spk=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = SearchUsers;\nexport default SearchUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchUsers\");","map":{"version":3,"sources":["/workspace/spring-petclinic/client/src/components/SearchUsers.js"],"names":["React","useState","gql","useLazyQuery","GET_USER_BYID","SearchUsers","userId","setUserId","findUser","data","loading","error","console","log","event","target","value","variables"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;;AAEA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASG,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,QAAD,EAAW;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAX,IAAuCR,YAAY,CAACC,aAAD,CAAzD;;AACA,MAAIM,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,eAFd;AAGE,QAAA,QAAQ,EAAGK,KAAD,IAAW;AACnBP,UAAAA,SAAS,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,OAAO,EAAE,MAAM;AACbR,UAAAA,QAAQ,CAAC;AACPS,YAAAA,SAAS,EAAE;AACTX,cAAAA,MAAM,EAAEA;AADC;AADJ,WAAD,CAAR;AAKD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAhCQD,W;UAEsCF,Y;;;KAFtCE,W;AAkCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\n\nconst GET_USER_BYID = gql`\n  query User($userId: ID!) {\n    user(id: $userId) {\n      name\n      nationality\n      username\n    }\n  }\n`;\n\nfunction SearchUsers() {\n  const [userId, setUserId] = useState(\"\");\n  const [findUser, { data, loading, error }] = useLazyQuery(GET_USER_BYID);\n  if (loading) {\n    return <h1>Data Loading</h1>;\n  }\n  console.log(data);\n  return (\n    <div>\n      <h1>Search Users</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter User Id\"\n          onChange={(event) => {\n            setUserId(event.target.value);\n          }}\n        />\n        <button\n          onClick={() => {\n            findUser({\n              variables: {\n                userId: userId,\n              },\n            });\n          }}\n        >\n          Fetch User\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchUsers;\n"]},"metadata":{},"sourceType":"module"}