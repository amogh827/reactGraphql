{"ast":null,"code":"var _jsxFileName = \"/workspace/spring-petclinic/client/src/components/SearchMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useLazyQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_MOVIE_BYNAME = gql`\n  query GetMovieByName($name: String!) {\n    movie(name: $name) {\n      name\n      yearOfPublication\n    }\n  }\n`;\n\nfunction SearchMovie() {\n  _s();\n\n  const [movieSearched, setMovieSearched] = useState(\"\");\n  const [fetchMovie, {\n    data: movieSearchedData,\n    loading,\n    error\n  }] = useLazyQuery(GET_MOVIE_BYNAME, {\n    variables: {\n      name: movieSearched\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Search Movie\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => {\n          setMovieSearched(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovie,\n        children: \" Fetch Movie \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), movieSearchedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Movie Name: \", movieSearchedData.movie.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Year Of Publication: \", movieSearchedData.movie.yearOfPublication]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchMovie, \"AqPcWzi21Ik4B4FAaFsTqdcOmFc=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = SearchMovie;\nexport default SearchMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovie\");","map":{"version":3,"sources":["/workspace/spring-petclinic/client/src/components/SearchMovie.js"],"names":["React","useState","useLazyQuery","gql","GET_MOVIE_BYNAME","SearchMovie","movieSearched","setMovieSearched","fetchMovie","data","movieSearchedData","loading","error","variables","name","event","target","value","movie","yearOfPublication"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,GAAvB,QAAkC,gBAAlC;;AAEA,MAAMC,gBAAgB,GAAGD,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASE,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,UAAD,EAAa;AAAEC,IAAAA,IAAI,EAAEC,iBAAR;AAA2BC,IAAAA,OAA3B;AAAoCC,IAAAA;AAApC,GAAb,IACJV,YAAY,CAACE,gBAAD,EAAmB;AAC7BS,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAER;AADG;AADkB,GAAnB,CADd;AAMA,sBACE;AAAA,4CAEE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAGS,KAAD,IAAW;AACnBR,UAAAA,gBAAgB,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,OAAO,EAAET,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAWGE,iBAAiB,iBAChB;AAAA,8BACE;AAAA,mCAAiBA,iBAAiB,CAACQ,KAAlB,CAAwBJ,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4CACwBJ,iBAAiB,CAACQ,KAAlB,CAAwBC,iBADhD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA9BQd,W;UAGLH,Y;;;KAHKG,W;AAgCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useLazyQuery, gql } from \"@apollo/client\";\n\nconst GET_MOVIE_BYNAME = gql`\n  query GetMovieByName($name: String!) {\n    movie(name: $name) {\n      name\n      yearOfPublication\n    }\n  }\n`;\n\nfunction SearchMovie() {\n  const [movieSearched, setMovieSearched] = useState(\"\");\n  const [fetchMovie, { data: movieSearchedData, loading, error }] =\n    useLazyQuery(GET_MOVIE_BYNAME, {\n      variables: {\n        name: movieSearched,\n      },\n    });\n  return (\n    <div>\n      Search Movie\n      <div>\n        <input\n          type=\"text\"\n          onChange={(event) => {\n            setMovieSearched(event.target.value);\n          }}\n        />\n        <button onClick={fetchMovie}> Fetch Movie </button>\n      </div>\n      {movieSearchedData && (\n        <div>\n          <h1>Movie Name: {movieSearchedData.movie.name}</h1>\n          <h1>\n            Year Of Publication: {movieSearchedData.movie.yearOfPublication}\n          </h1>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchMovie;\n"]},"metadata":{},"sourceType":"module"}