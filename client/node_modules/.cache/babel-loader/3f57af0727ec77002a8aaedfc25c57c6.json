{"ast":null,"code":"var _jsxFileName = \"/workspace/spring-petclinic/client/src/components/MoviesList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_MOVIES_LIST = gql`\n  query getAllMovies {\n    movies {\n      id\n      name\n      yearOfPublication\n    }\n  }\n`;\n\nfunction MoviesList() {\n  _s();\n\n  const {\n    data\n  } = useQuery(GET_MOVIES_LIST);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Movies List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), data.movies.map(_ref => {\n      let {\n        id,\n        name\n      } = _ref;\n      return;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviesList, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = MoviesList;\nexport default MoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"sources":["/workspace/spring-petclinic/client/src/components/MoviesList.js"],"names":["React","useQuery","gql","GET_MOVIES_LIST","MoviesList","data","console","log","movies","map","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,eAAe,GAAGD,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASE,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACE,eAAD,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,IAAI,CAACG,MAAL,CAAYC,GAAZ,CAAgB,QAAkB;AAAA,UAAjB;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAiB;AACjC;AACD,KAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAXQP,U;UACUH,Q;;;KADVG,U;AAaT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst GET_MOVIES_LIST = gql`\n  query getAllMovies {\n    movies {\n      id\n      name\n      yearOfPublication\n    }\n  }\n`;\n\nfunction MoviesList() {\n  const { data } = useQuery(GET_MOVIES_LIST);\n  console.log(data);\n  return (\n    <div>\n      <h1> Movies List </h1>\n      {data.movies.map(({ id, name }) => {\n        return;\n      })}\n    </div>\n  );\n}\n\nexport default MoviesList;\n"]},"metadata":{},"sourceType":"module"}