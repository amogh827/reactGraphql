{"ast":null,"code":"var _jsxFileName = \"/workspace/spring-petclinic/client/src/components/UsersList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_ALL_USERS = gql`\n  query GetAllUsers {\n    users {\n      id\n      name\n      username\n      age\n      nationality\n    }\n  }\n`;\n\nfunction DisplayData() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ALL_USERS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Data is Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 23\n  }, this);\n\n  if (error) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data === null || data === void 0 ? void 0 : data.users.map(_ref => {\n        let {\n          id,\n          name,\n          age,\n          username,\n          nationality\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Name: \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/users/${id}`,\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"age: \", age]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Nationality: \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DisplayData, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/workspace/spring-petclinic/client/src/components/UsersList.js"],"names":["React","useQuery","gql","Link","GET_ALL_USERS","DisplayData","data","loading","error","console","log","users","map","id","name","age","username","nationality"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYA,SAASG,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACG,aAAD,CAAzC;AACA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEb,MAAIC,KAAJ,EAAW;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,IADH,aACGA,IADH,uBACGA,IAAI,CAAEK,KAAN,CAAYC,GAAZ,CAAgB,QAA8C;AAAA,YAA7C;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA,GAAZ;AAAiBC,UAAAA,QAAjB;AAA2BC,UAAAA;AAA3B,SAA6C;AAC7D,4BACE;AAAA,kCACE;AAAA,8CACQ,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,UAASJ,EAAG,EAAvB;AAAA,wBAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,qCAAcE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,gCAASD,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,wCAAiBD,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAAUD,EAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA1BQR,W;UAC0BJ,Q;;;KAD1BI,W;AA4BT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\n\nconst GET_ALL_USERS = gql`\n  query GetAllUsers {\n    users {\n      id\n      name\n      username\n      age\n      nationality\n    }\n  }\n`;\n\nfunction DisplayData() {\n  const { data, loading, error } = useQuery(GET_ALL_USERS);\n  if (loading) return <h1>Data is Loading</h1>;\n\n  if (error) {\n    console.log(error);\n  }\n  return (\n    <div>\n      <h1>Users List</h1>\n      <div>\n        {data?.users.map(({ id, name, age, username, nationality }) => {\n          return (\n            <div key={id}>\n              <h1>\n                Name: <Link to={`/users/${id}`}>{name}</Link>\n              </h1>\n              <p>Username: {username}</p>\n              <p>age: {age}</p>\n              <p>Nationality: {name}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayData;\n"]},"metadata":{},"sourceType":"module"}