{"ast":null,"code":"var _jsxFileName = \"/workspace/spring-petclinic/client/src/components/User.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_USER_BYID = gql`\n  query User($userId: ID!) {\n    user(id: $userId) {\n      name\n    }\n  }\n`;\n\nfunction User() {\n  _s();\n\n  const id = useParams().id;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_USER_BYID, {\n    variables: {\n      userId: id\n    }\n  });\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"User \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n\n_s(User, \"Dk296MtTywcK5DUueWXNwIsw61A=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/workspace/spring-petclinic/client/src/components/User.js"],"names":["React","useParams","useQuery","gql","GET_USER_BYID","User","id","data","loading","error","variables","userId","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,SAASE,IAAT,GAAgB;AAAA;;AACd,QAAMC,EAAE,GAAGL,SAAS,GAAGK,EAAvB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACE,aAAD,EAAgB;AACvDM,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAEL;AADC;AAD4C,GAAhB,CAAzC;AAKAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,sBAAO;AAAA,wBAAWD,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GATQD,I;UACIJ,S,EACsBC,Q;;;KAF1BG,I;AAWT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst GET_USER_BYID = gql`\n  query User($userId: ID!) {\n    user(id: $userId) {\n      name\n    }\n  }\n`;\n\nfunction User() {\n  const id = useParams().id;\n  const { data, loading, error } = useQuery(GET_USER_BYID, {\n    variables: {\n      userId: id,\n    },\n  });\n  console.log(data);\n  return <div>User {id}</div>;\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}